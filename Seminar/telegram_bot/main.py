import requests
import datetime
import logging
from aiogram import Bot, Dispatcher, executor, types
from config import TOKEN_API, WEATHER_API
import markups as nav
import random
# Configure logging
logging.basicConfig(level=logging.INFO)
# Initialize bot and dispatcher
bot = Bot(token=TOKEN_API)
dp = Dispatcher(bot)


HELP_COMMAND = """
/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/Weather - –ü–æ–≥–æ–¥–∞
"""




async def on_startup(_):
    print('Bot launched successfully!')


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    """
        This handler will be called when user sends `/start` command
    """
    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è! {0.first_name}'.format(message.from_user) +' üëã', reply_markup=nav.mainMenu)
    await message.delete()


@dp.message_handler(commands=['help'])
async def send_helper(message: types.Message):
    """
        This handler will be called when user sends  `/help` command
    """
    await message.reply(text=HELP_COMMAND)

@dp.message_handler()
async def choose(message: types.Message):

    code_to_emoji = {
        "Clear": "–Ø—Å–Ω–æ ‚òÄÔ∏è",
        "Clouds": "–û–±–ª–∞—á–Ω–æ ‚òÅÔ∏è",
        "Rain": "–î–æ–∂–¥—å ‚òîÔ∏è",
        "Drizzle": "–ú–æ—Ä–æ—Å—å ü´ß",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ üå©",
        "Snow": "–°–Ω–µ–≥ ‚ùÑÔ∏è",
        "Mist": "–¢—É–º–∞–Ω üå´"
    }

    try:
        r = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={WEATHER_API}&units=metric"
        )
        data = r.json()

        city = data["name"]
        cur_weather = data["main"]["temp"]

        weather_description = data["weather"][0]["main"]
        if weather_description in code_to_emoji:
            wd = code_to_emoji[weather_description]
        else:
            wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å —á—Ç–æ —Ç–∞–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç"

        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        temp_max = data["main"]["temp_max"]
        temp_min = data["main"]["temp_min"]
        wind = data["wind"]["speed"]
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        await message.answer(f"----{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}----\n"
                            f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏: {city}\n–° —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π –≤–æ–∑–¥—É—Ö–∞: {int(cur_weather)}¬∞C {wd}\n–í–ª–∞–∂–Ω–æ—Å—Ç—å—é –≤–æ–∑–¥—É—Ö–∞: {humidity}%\n–° –¥–∞–≤–ª–µ–Ω–∏–µ–º –≤–æ–∑–¥—É—Ö–∞: {pressure}–º–º.—Ä—Ç.—Å—Ç"
                            f"\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {int(temp_max)}¬∞C\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {int(temp_min)}¬∞C\n"
                            f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind}–º/—Å\n–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
                            f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!ü§ó")

    except:
        if message.text == 'üî¢ Random Number':
            await bot.send_message(message.from_user.id, 'Your number is: ' + str(random.randint(0, 1001)))
        elif message.text == 'üß≠ Main Menu':
            await bot.send_message(message.from_user.id, 'üß≠ Main Menu', reply_markup= nav.mainMenu)
        elif message.text == 'üå§ Weather':
            await bot.send_message(message.from_user.id, "–ü–æ–≥–æ–¥–∞ üå§\n–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –ª–æ–∫–∞—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üåÖ")
        elif message.text == '‚è© Other':
            await bot.send_message(message.from_user.id, '‚è© Other', reply_markup= nav.otherMenu)
        elif message.text == 'ü§ñ Info':
            await bot.send_message(message.from_user.id, "üß¨ Fear is stupid. I'm sorry I was affraid, 1960" )
        elif message.text == 'üéµ Music':
            await bot.send_message(message.from_user.id, 'üéµ Music', reply_markup= nav.otherMenu)
            await message.answer('<a href="https://music.yandex.ru">Listen to music</a>',parse_mode="HTML")
            await message.answer('–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è' + 'ü´∂ ')
        else:
            await message.reply("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ! üçé")


if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup)